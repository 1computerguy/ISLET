#!/usr/bin/env bash
SPACER1="---------------"
SPACER2="               "

normal="$(tput sgr0)"
bold="$(tput bold)"
underline="$(tput smul)"
yellow="$(tput setaf 3)"
blackf="$(tput setaf 0)"
blackb="$(tput setab 0)"
redf="$(tput setaf 1)"
redb="$(tput setab 1)"
greenf="$(tput setaf 2)"
greenb="$(tput setab 2)"
bluef="$(tput setaf 4)"
blueb="$(tput setab 4)"
magentaf="$(tput setaf 5)"
magentab="$(tput setab 5)"
cyanf="$(tput setaf 6)"
cyanb="$(tput setab 6)"
whitef="$(tput setaf 7)"
whiteb="$(tput setab 7)"

N="${normal}"
B="${bold}"
U="${underline}"
Y="${yellow}"
BLF="${blackf}"
BLB="${blackb}"
RF="${redf}"
RB="${redb}"
GF="${greenf}"
GB="${greenb}"
BF="${bluef}"
BB="${blueb}"
MF="${magentaf}"
MB="${magentab}"
CF="${cyanf}"
CB="${cyanb}"
WF="${whitef}"
WB="${whiteb}"

red()     { alert; }
yellow()  { notice; }
magenta() { info; }
white()   { ask; }

alert()   { echo -e "${redf}$*${normal}" >>/dev/stderr; }
notice()  { echo -e "${yellow}$*${normal}"; }
info()    { echo -e "${magentf}$*${normal}"; }
ask()     { echo -n -e "${whitef}$*${normal}"; }
option()  { echo -n -e "${Y}[${N}${BF}$1${N}${Y}/${N}${BF}$2${N}${Y}]${N}: " ;}

quit(){ MESSAGE="$1"; alert "${MESSAGE:-Exiting session!}"; log "$MESSAGE"; exit 1; }
message(){ echo; echo "$1"; notice "$MOTD"; echo; }
sanitize(){ ITEM="$1"; echo ${ITEM//[^a-zA-Z0-9]/}; }
did_it_work() { test $? -ne 0 && quit "$1"; }

islet_banner(){
cat <<EOF
${MF}===============================================================${N}

   ${BF}ISLET${N}${RF}:${N} ${Y}A Linux-based Software Training System${N}

${Y}(${N}${RF}I${N}${Y})${N}solated,
          ${Y}(${N}${RF}S${N}${Y})${N}calable,
                    & ${Y}(${N}${RF}L${N}${Y})${N}ightweight ${Y}(${N}${RF}E${N}${Y})${N}nvironment
						for ${Y}(${N}${RF}T${N}${Y})${N}raining

   ${BF}Web${N}${RF}:${N} ${U}${Y}https://github.com/jonschipp/islet${N}

${MF}===============================================================${N}
EOF
}

log(){
	MESSAGE=$(echo "$1" | sed -e 's/\\n/ /g' -e 's/\\t/ /g' -e 's/\\r/ /g')
        logger -p local0.notice -t "islet" "$0: $MESSAGE"
}

is_debug(){
MESSAGE="$1"
if [[ "$DEBUG" == "yes" ]];
then
        INFOLEVEL=""
        alert "$MESSAGE"
        log "$MESSAGE"
else
        INFOLEVEL="2>/dev/null"
fi
}
