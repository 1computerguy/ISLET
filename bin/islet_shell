#!/usr/bin/env bash
# Global Declarations
CONFIG=LOCATION
COUNT=0
LIST=()
ANIMATE=$(which pv 2>/dev/null)
ANIMATE_SPEED=90

# Store some stuff, these can be referenced from config files
read CLIENT SRCPORT SERVER DSTPORT <<<"${SSH_CONNECTION}"
export CLIENT SRCPORT SERVER DSTPORT IP="$SERVER"
export SSH_TTY
export DISPLAY=${CLIENT}:0
export TERM
export PPID HOST_PORT="$PPID"
export TMOUT=60
readonly CLIENT SRCPORT SERVER DSTPORT SSH_TTY TERM PPID TMOUT

err(){
        MESSAGE="$1"
        logger -s -p local0.notice -t "islet" "$0: $MESSAGE"
        exit 1
}

if [ -f $CONFIG ]; then
        source $CONFIG
	source $LIBISLET
	readonly CONFIG
else
        err "Error: ${CONFIG:-config} or ${LIBISLET:-libislet} not found!"
fi

clear

if [ -d $CONFIG_DIR ]
then
        cd $CONFIG_DIR
else
        err "Error: $CONFIG_DIR doesn't exist or non-executable!"
fi

# Display ISLET Banner
test -f ${ANIMATE:-notset} && islet_banner | pv -qL $ANIMATE_SPEED || islet_banner

# Press key to continue
printf "${Y}.${N}${RF}.${N}${BF}.${N}Press any key to continue or CTRL+C to exit${Y}.${N}${RF}.${N}${BF}.${N}\n"
read -rs -n1 key
clear
echo

# Configuration menu
notice "\t\t\t\tAvailable configurations:\n"
printf '\t\t\t%-29s %-7s %-30s\n' "${B}Configuration${N}" "|" "${B}Description${N}"
printf '\t\t\t%-30s %-7s %-30s\n' "${BF}$SPACER1${N}" "|" "${BF}$SPACER1${N}"

for config in *.conf
do
        source $config
        if [[ "$VISIBLE" != "no" ]]; then
                printf '\t\t\t%-30s %-7s %-30s\n' "${WF}$config${N}" "|" "${U}$DESCRIPTION${N}"
                LIST+=("$config")
        fi
	unset BANNER
done


echo && unset BANNER && echo
notice "Choose a number to load the configuration:"
echo

PS3="${Y}[${N}${BF}Choice${N}${Y}]${N}: "
select CONFIGURATION in ${LIST[@]}
do
        if [ -f "$CONFIG_DIR/$CONFIGURATION" ]; then
                source "$CONFIG_DIR/$CONFIGURATION"
                break
        else
                echo "Invalid choice!"
        fi

        let COUNT++
        if [ $COUNT -ge $FAILURE_COUNT ]; then
                alert "Too many failed attempts!"
                exit 1
        fi

done

# Per image banner
if ! [ -z "$BANNER" ]; then
        clear
        echo "$BANNER"
fi

####################################################
exec "$LAUNCH_CONTAINER" "$CONFIGURATION"
####################################################
