#!/usr/bin/env bash
# Global Declarations
ARG="$1"
ARGC=$#
CONFIG=LOCATION
COUNT=0
LIST=()
ANIMATE=$(which pv 2>/dev/null)
ANIMATE_SPEED=90

# Store some stuff, these can be referenced from config files
read CLIENT SRCPORT SERVER DSTPORT <<<"${SSH_CONNECTION}"
export CLIENT SRCPORT SERVER DSTPORT IP="$SERVER"
export SSH_TTY
export DISPLAY="${CLIENT}:0"
export TERM
export PPID HOST_PORT="$PPID"
export TMOUT=60
readonly CLIENT SRCPORT SERVER DSTPORT SSH_TTY TERM PPID TMOUT

err(){
  MESSAGE="$1"
  logger -s -p local0.notice -t "islet" "$0: $MESSAGE"
  exit 1
}

# Get global variables
if [ -f "$CONFIG" ]; then
  . "$CONFIG"
  . "$LIBISLET"
  readonly CONFIG
else
  err "Error: ${CONFIG:-config} or ${LIBISLET:-libislet} not found!"
fi

clear

if [ -d "$CONFIG_DIR" ]
then
  cd "$CONFIG_DIR"
else
  err "Error: $CONFIG_DIR doesn't exist or non-executable!"
fi

# Display ISLET Banner
if [ "$ARG" != "nobanner" ]; then
  test -f "${ANIMATE:-notset}" && islet_banner | pv -qL "$ANIMATE_SPEED" || islet_banner
  # Press key to continue
  timecount $TMOUT
  clear && echo
fi

# Configuration menu
notice "\t\t\t\tAvailable configurations:\n"
printf '\t\t\t%-29s %-7s %-30s\n' "${B}Configuration${N}" "|" "${B}Description${N}"
printf '\t\t\t%-30s %-7s %-30s\n' "${BF}$SPACER1${N}" "|" "${BF}$SPACER1${N}"

# Iterate over configuration files in $CONFIG_DIR and display them as options
# It prints the config file ($config) and its description ($DESCRIPTION)
for config in *.conf
do
  . "$config"
  if [[ "$VISIBLE" = "yes" || "$ENABLE" = "yes" ]]; then
    printf '\t\t\t%-30s %-7s %-30s\n' "${WF}$config${N}" "|" "${U}$DESCRIPTION${N}"
    LIST+=("$config")
  fi
  unset BANNER
done

# Quit if there are no config files present
test "${#LIST[@]}" -eq 0 && quit "\t\t\tNo configurations available!"
echo && unset BANNER && echo
notice "Choose a number to load the configuration (or ^C to exit):"
echo

PS3="${Y}[${N}${BF}Choice${N}${Y}]${N}: "

# Here the user chooses the configuration from the menu
# Inherit the variables from the config file after selection
select CONFIGURATION in "${LIST[@]}"
do
  if [ -f "$CONFIG_DIR/$CONFIGURATION" ]; then
    . "$CONFIG_DIR/$CONFIGURATION"
    break
  else
    echo "Invalid choice!"
  fi

  let COUNT++
  if [ "$COUNT" -ge "$FAILURE_COUNT" ]; then
    alert "Too many failed attempts!"
    exit 1
  fi
done

# Display image banner
[ "$BANNER" ] && clear && echo "$BANNER"

# Move to temp directory for islet_login
[ -d /tmp ] && cd /tmp

# Replace this process with islet_login which will
# pass the config's variables and then launch the container

####################################################
exec "$LAUNCH_CONTAINER" "$CONFIGURATION"
####################################################
