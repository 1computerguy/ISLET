#!/usr/bin/env bash
# Global Declarations
CONFIG=LOCATION
. $CONFIG

###################################################
# Error and log
# Globals:
#   None
# Arguments:
#   message - Message to write out and log 
# Returns:
#   None
###################################################

err(){
  local message="$1"
  logger -s -p local0.notice -t "islet" "$0: $message"
  exit 1
}

###################################################
# Load variables from configuration files
# Globals:
#   CONFIG - Main configuration file
#   LIBISLET - Load library containing functions
#   MODULE - Runtime configuration file 
# Arguments:
#   None
# Returns:
#   None
###################################################

load_config(){
  local environment="$1"
  if [[ -f "$CONFIG" ]]; then
    . "$CONFIG"
    . "$LIBISLET"
    . "$CONFIG_DIR/modules/${MODULE}.conf"
    . "$environment"
  else
    logger -s -p local0.notice -t "isletd" "$0: $FUNCNAME: Unable to read $CONFIG"
    return 1
  fi
}

###################################################
# Clean up variables after each iteration
# Globals:
#   Many
# Arguments:
#   None
# Returns:
#   None
###################################################

clear_vars(){
  # Main globals
  unset LIBISLET DB
  # Cleanup variables
  unset MAX_SIZE DAYS
}

###################################################
# Get time for time based tasks
# Globals:
#   None
# Arguments:
#   None
# Returns:
#   None
###################################################

get_time(){
  TIME=$(date +"%s")
  EXPIRATION=$(date --date=@$((TIME+86400*DAYS)) +"%c")
}

###################################################
# Remove users older than days
# Globals:
#   DB
# Arguments:
#   days - Value of DAYS, option in config file
# Returns:
#   None
###################################################

cleanup_by_user(){
  local days="$1"
  if file "$DB" 2>/dev/null | grep -q SQLite; then
    sqlite3 "$DB" "pragma foreign_keys = on; DELETE FROM accounts WHERE (strftime('%s','now') - ts) >= (${days}*86400);"
  fi
}

###################################################
# Daemonize, run indefinitely every 60 seconds
# Globals:
#   Many
# Arguments:
#   None
# Returns:
#   None
###################################################

main(){
  # We're a daemon, we don't end
  while true; do
    ## Global tasks
    # Remove users which are older than $DAYS days
    [[ "$DAYS" ]] && cleanup_by_user "$DAYS"
    ## Per config tasks
    for environment in $CONFIG_DIR/environments/*.conf $CONFIG_DIR/islet.conf; do
      clear_vars
      if [[ -r "$environment" ]]; then
        # Obtain configurations
        load_config "$environment" || continue
        # Remove containers with size greater than $MAX_SIZE
        [[ "$MAX_SIZE" ]] && cleanup_by_size "$MAX_SIZE" "$environment"
        # Remove containers with date older than $DAYS
        [[ "$DAYS" ]] && cleanup_by_date "$DAYS" "$environment"
        # Remove old port forward rules
        [[ "$VIRTUAL_PORT" ]] && cleanup_by_network
      fi
    done
    sleep $INTERVAL
  done
}

main
