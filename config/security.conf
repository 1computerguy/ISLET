#####################################
# Kernel Capabilities for Containers
#####################################

DROP_ALL="no"                       # Drop all capabilities (overrides individuals)
ADD_ALL="no"                        # Add all capabilities (overrides individuals)

## Disabled by default in Docker
CAP_AUDIT_WRITE="no"                # Write the audit log
CAP_AUDIT_CONTROL="no"              # Configure audit subsystem
CAP_MAC_ADMIN="no"                  # Configure MAC configuration
CAP_MAC_OVERRIDE="no"               # Ignore kernel MAC policy
CAP_NET_ADMIN="no"                  # Configure the network
CAP_SETPCAP="no"                    # Modify process capabilities
CAP_SYSLOG="no"                     # Modify kernel printk behavior
CAP_SYS_ADMIN="no"                  # Catch all
CAP_SYS_MODULE="no"                 # Insert/remove kernel modules
CAP_SYS_PACCT="no"                  # Configure process accounting
CAP_SYS_NICE="no"                   # Modify priority of processes
CAP_SYS_RAWIO="no"                  # Modify kernel memory
CAP_SYS_RESOURCE="no"               # Override resource limits
CAP_SYS_TIME="no"                   # Modify the system clock
CAP_SYS_TTY_CONFIG="no"             # Configure tty devices

## Enabled/Others
CAP_BLOCK_SUSPEND="yes"             # Employ features that can block system suspend
CAP_CHOWN="yes"                     # Make arbitrary changes to file UIDs and GIDs
CAP_DAC_OVERRIDE="yes"              # Bypass file read, write, and execute permission checks
CAP_DAC_READ_SEARCH="yes"           # Bypass file read permission & directory read & execute permission checks
CAP_FOWNER="yes"                    # Set extended file attributes (see chattr(1)) on arbitrary files, ACL's, etc.
CAP_FSETID="yes"                    # Don't clear SUID and SGUID bits when a file is modified, etc.
CAP_IPC_LOCK="yes"                  # Lock memory
CAP_IPC_OWNER="yes"                 # Bypass permission checks for operations on System V IPC objects
CAP_KILL="yes"                      # Bypass permission checks for sending signals
CAP_LEASE="yes"                     # Establish leases on arbitrary files
CAP_LINUX_IMMUTABLE="yes"           # Set the FS_APPEND_FL and FS_IMMUTABLE_FL inode flags (see chattr(1))
CAP_NET_BIND_SERVICE="yes"          # Bind a socket to Internet domain privileged port (port numbers less than 1024)
CAP_NET_BROADCAST="yes"             # (Unused)  Make socket broadcasts, and listen to multicasts
CAP_NET_RAW="yes"                   # Use RAW and PACKET sockets
CAP_SETGID="yes"                    # Make arbitrary manipulations of process GIDs and supplementary GID list
CAP_SETFCAP="yes"                   # Set file capabilities
CAP_SETUID="yes"                    # Make arbitrary manipulations of process UIDs
CAP_SYS_BOOT="yes"                  # Use reboot(2) and kexec_load(2)
CAP_SYS_CHROOT="yes"                # Use chroot(2)
CAP_SYS_PTRACE="yes"                # Trace arbitrary processes using ptrace(2)
CAP_WAKE_ALARM="yes"                # Trigger something that will wake up the system
